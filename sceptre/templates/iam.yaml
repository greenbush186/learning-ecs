AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to create an IAM role"

Resources:
  # EC2 role
  ECSInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ecsInstanceRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  # ECS role
  ECSRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ecsRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs.amazonaws.com"
            Action: "sts:AssumeRole"
#      ManagedPolicyArns:
#        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole"
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              # Rules which allow ECS to attach network interfaces to instances
              # on your behalf in order for awsvpc networking mode to work right
              - 'ec2:AttachNetworkInterface'
              - 'ec2:CreateNetworkInterface'
              - 'ec2:CreateNetworkInterfacePermission'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DeleteNetworkInterfacePermission'
              - 'ec2:Describe*'
              - 'ec2:DetachNetworkInterface'

              # Rules which allow ECS to update load balancers on your behalf
              # with the information sabout how to send traffic to your containers
              - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
              - 'elasticloadbalancing:DeregisterTargets'
              - 'elasticloadbalancing:Describe*'
              - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
              - 'elasticloadbalancing:RegisterTargets'
            Resource: '*'    

  # ECS task role
  ECSTaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"

  # ECS autoscale role
  ECSAutoscaleRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ecsAutoscalingRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "application-autoscaling.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole"
      Policies:
        - PolicyName: "ECSAutoScalingPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "application-autoscaling:*"
                Resource: "*"

Outputs:
  ECSInstanceRoleArn:
    Description: "The ARN of ECSInstanceRole"
    Value: !GetAtt ECSInstanceRole.Arn
  ECSRole:
    Description: "The ARN of ECSRole"
    Value: !GetAtt ECSRole.Arn
  ECSTaskExecutionRole:
    Description: "The ARN of ECSTaskExecutionRole"
    Value: !GetAtt ECSTaskExecutionRole.Arn
  ECSAutoscaleRole:
    Description: "The ARN of ECSAutoscaleRole"
    Value: !GetAtt ECSAutoscaleRole.Arn
